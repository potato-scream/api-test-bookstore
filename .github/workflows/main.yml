# Как будет называться наш автопилот в GitHub
name: API Tests CI

# Когда его запускать? При каждом пуше в ветку 'main'
on:
  push:
    branches: [ "main" ]

jobs:
  # Название нашей задачи
  run-api-tests:
    # На каком компе гонять тесты (берем стандартный от GitHub)
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Скачиваем ваш код из репозитория
      - name: Checkout repository
        uses: actions/checkout@v3

      # Шаг 2: Ставим Java 11
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # Шаг 3: Даем права на запуск Gradle (нужно для Linux)
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Шаг 4: Запускаем тесты!
      - name: Run API tests
        run: ./gradlew test

      # Шаг 5: Устанавливаем Allure Commandline
      # Этот шаг выполняется всегда, даже если тесты упали
      - name: Setup Allure Commandline
        if: always()
        run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.21.0/allure-2.21.0.tgz
          sudo tar -zxvf allure-2.21.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.21.0/bin/allure /usr/bin/allure
          allure --version

      # Шаг 6: Генерируем HTML-отчет Allure
      - name: Generate Allure Report
        if: always()
        run: allure generate build/allure-results -o allure-report --clean

      # Шаг 7: Публикуем отчет на GitHub Pages
      # Используем очень стабильный и популярный экшен для публикации
      - name: Deploy report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
